# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
  repo: '$(build.repository.name)'

steps:
- task: GoTool@0
  inputs:
    version: '1.14.3'
  displayName: 'Install Go 1.14.3'

- script: |
    go mod download
  displayName: 'Download dependencies'

- script: |
    go test -v ./...
  displayName: 'Run tests'

- script: |
    env GOOS=linux GOARCH=amd64 go build -o prepare-commit-msg cmd/msgcommitter/msgcommitter.go
    env GOOS=windows GOARCH=amd64 go build -o prepare-commit-msg.exe cmd/msgcommitter/msgcommitter.go
  displayName: 'Build msgcommitter'

- script: |
    if [ -e prepare-commit-msg ]
    then
      echo "file prepare-commit-msg successfully generated"
      exit 0
    else
      echo "File prepare-commit-msg not generated"
      exit 1
    fi

    if [ -e prepare-commit-msg.exe ]
    then
      echo "file prepare-commit-msg successfully generated"
      exit 0
    else
      echo "File prepare-commit-msg not generated"
      exit 1
    fi
  displayName: 'Validate prepare-commit-msg and prepare-commit-msg.exe files existance after build'
